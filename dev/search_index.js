var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Wakame","category":"page"},{"location":"#Wakame","page":"Home","title":"Wakame","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Wakame.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Wakame]","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install Wakame either do","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"Wakame\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"or switch to Pkg mode with ] and issue","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add Wakame","category":"page"},{"location":"#Requirement","page":"Home","title":"Requirement","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package requires the following software to be installed:","category":"page"},{"location":"","page":"Home","title":"Home","text":"mecab\ndictionary for mecab (such as mecab-ipadic, mecab-naist-jdic, and others)","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Wakame\n\n# Create a mecab tagger\nmecab = Mecab()\n\n# You can give MeCab option like \"-o wakati\"\n# mecab = Mecab(\"-o wakati\")\n\n# Parse text. It returns Array of MecabNode type\nresults = parse(mecab, \"すももももももももものうち\")\n\n# Access each result. It returns Array of String\nfor result in results\n  println(result.surface, \":\", result.feature)\nend\n\n# Parse surface\nresults = parse_surface(mecab, \"すももももももももものうち\")\n\n# Access each result. It returns Array of Array of MecabNode\nfor result in results\n  println(result)\nend\n\n# Parse nbest result\nnbest_results = parse_nbest(mecab, 3, \"すももももももももものうち\")\nfor nbest_result in nbest_results\n  for result in nbest_result\n    println(result.surface, \":\", result.feature)\n  end\n  println()\nend\n\n\n# Read from file as well\nwrite(\"test.txt\", \"すももももももももものうち\")\nresults = mecab.parse_file(\"test.txt\")\n","category":"page"},{"location":"#Credits","page":"Home","title":"Credits","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Reboot of MeCab.jl created by Michiaki Ariga","category":"page"},{"location":"","page":"Home","title":"Home","text":"Original MeCab is created by Taku Kudo","category":"page"},{"location":"#Contributors","page":"Home","title":"Contributors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"r9y9\nsnthot\ntkelman","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Wakame]","category":"page"}]
}
